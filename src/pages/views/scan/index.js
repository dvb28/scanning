import React, { useState } from 'react';
import '@react-pdf-viewer/core/lib/styles/index.css';
import Main from '@/pages/layout/main';
import Toasts from '@/utils/toasts';
import {
  Button,
  FormControl,
  FormControlLabel,
  FormLabel,
  Grid,
  InputLabel,
  MenuItem,
  RadioGroup,
  Select,
  Radio,
  TextField,
} from '@mui/material';
import Typography from '@mui/material/Typography';
import Viewers from '@/components/viewers';

export default function Scan() {
  // M√°y scan ƒë√£ ch·ªçn
  const [scanner, setScanner] = useState('');

  // H√†m khi thay ƒë·ªïi m√°y scan
  const handleChangeScanner = (event) => {
    setScanner(event.target.value);
  };

  // Thay ƒë·ªïi ƒë·ªô ph√¢n gi·∫£i c·ªßa b·∫£n qu√©t
  const [DPI, setDPI] = useState(300);

  // H√†m khi thay ƒë·ªïi m√°y scan
  const handleChangeDPI = (event) => {
    setDPI(event.target.value);
  };

  // Thay ƒë·ªïi c·∫ßu h√¨nh prefix t√™n file
  const [prefixName, setPrefixName] = useState('');

  // H√†m khi thay ƒë·ªïi m√°y scan
  const handleChangePrefixName = (event) => {
    setPrefixName(event.target.value);
  };

  // H√†m khi thay ƒë·ªïi ki·ªÉu scan
  const [handleScanType, setHandleScanType] = useState(false);

  // Ki·ªÉm tra k·∫øt n·ªëi c·ªßa m√°y scan
  const [scannerCnt, setScannerCnt] = useState(false);

  // Thay ƒë·ªïi tr·∫°ng th√°i k·∫øt n·ªëi c·ªßa m√°y qu√©t
  const changeScannerCnt = (value) => {
    setScannerCnt(value);
  };
  // Thay ƒë·ªïi ki·ªÉu qu√©t
  const handleChangeScanType = (value) => {
    setHandleScanType(value);
  };

  // Try Connnect
  const tryingConnectScanner = (e) => {
    e.preventDefault();
    Toasts.promise({
      pending: 'ƒêang th·ª≠ k·∫øt n·ªëi v·ªõi m√°y qu√©t',
      success: 'K·∫øt n·ªëi v·ªõi m√°y qu√©t th√†nh c√¥ng üëå',
      error: 'K·∫øt n·ªëi v·ªõi m√°y qu√©t th·∫•t b·∫°i ü§Ø',
    });
  }

  // Qu√©t t√†i li·ªáu
  const scanHandle = (e) => {
    e.preventDefault();
    Toasts.promise({
      pending: 'ƒêang qu√©t t√†i li·ªáu',
      success: 'Qu√©t t√†i li·ªáu th√†nh c√¥ng üëå',
      error: 'Qu√©t t√†i li·ªáu th·∫•t b·∫°i ü§Ø',
    });
  };
  return (
    <Main title='Qu√©t t√†i li·ªáu'>
      <Grid container spacing={2}>
        <Grid item xs={12} md={12} lg={6} sx={{ height: '86.6vh', overflow: 'auto' }}>
          <Viewers fileUrl="/pdf-test.pdf" />
        </Grid>
        <Grid item xs={12} md={12} lg={6} >
          <Typography
            sx={{ textTransform: 'uppercase', color: 'royalblue', marginBottom: '10px'}}
            variant="h6"
            component="h6"
          >
            C√†i ƒë·∫∑t m√°y qu√©t
          </Typography>
          <Grid container spacing={3}>
            <Grid item xs={12} md={6} lg={6}>
              <FormControl size="small" fullWidth sx={{ marginBottom: '25px' }}>
                <InputLabel id="scanner-machine-label">Ch·ªçn m√°y qu√©t</InputLabel>
                <Select
                  labelId="scanner-machine-label"
                  id="scanner-machine"
                  value={scanner}
                  label="Ch·ªçn m√°y qu√©t"
                  onChange={handleChangeScanner}
                >
                  <MenuItem value={10}>Ch·ªçn m√°y qu√©t</MenuItem>
                </Select>
              </FormControl>
              <FormControl size="small" fullWidth sx={{ marginBottom: '25px' }}>
                <InputLabel id="scanner-dpi-label">ƒê·ªô ph√¢n gi·∫£i (DPI)</InputLabel>
                <Select
                  labelId="scanner-dpi-label"
                  id="scanner-dpi"
                  value={DPI}
                  label="Ch·ªçn ƒë·ªô ph√¢n gi·∫£i"
                  onChange={handleChangeDPI}
                >
                  <MenuItem value={300}>300</MenuItem>
                </Select>
              </FormControl>
              <Grid container spacing={2}>
                <Grid item lg={8} md={8} xs={6}>
                  <TextField
                    fullWidth
                    size="small"
                    id="scanner-prefix-name"
                    placeholder="VD: HS.20.21.22.X"
                    label="C·∫•u h√¨nh t√™n file (Prefix)"
                    variant="outlined"
                    onChange={handleChangePrefixName}
                  />
                </Grid>
                <Grid item lg={4} md={4} xs={6}>
                  <TextField
                    fullWidth
                    size="small"
                    sx={{ marginBottom: '25px' }}
                    type="number"
                    id="scanner-suffix-number"
                    label="TƒÉng"
                    variant="outlined"
                    onChange={handleChangePrefixName}
                  />
                </Grid>
              </Grid>
              <FormControl size="small" fullWidth sx={{ marginBottom: '25px' }}>
                <InputLabel id="scanner-color-label">M√†u qu√©t</InputLabel>
                <Select
                  labelId="scanner-color-label"
                  id="scanner-color"
                  value={scanner}
                  label="Ch·ªçn m√°y qu√©t"
                  onChange={handleChangeScanner}
                >
                  <MenuItem value="backandwhite">ƒêen tr·∫Øng</MenuItem>
                  <MenuItem value="gray">X√°m</MenuItem>
                  <MenuItem value="color">M√†u</MenuItem>
                </Select>
              </FormControl>
              <FormControl size="small" fullWidth sx={{ marginBottom: '25px' }}>
                <InputLabel id="scanner-page-label">S·ªë trang mu·ªën qu√©t</InputLabel>
                <Select
                  labelId="scanner-page-label"
                  id="scanner-page"
                  value={scanner}
                  label="S·ªë trang mu·ªën qu√©t"
                  onChange={handleChangeScanner}
                >
                  <MenuItem value="backandwhite">Qu√©t m·ªôt trang</MenuItem>
                  <MenuItem value="gray">Qu√©t nhi·ªÅu trang</MenuItem>
                </Select>
              </FormControl>
              {scannerCnt ? (
                <Button variant="contained" onClick={scanHandle}>
                  Qu√©t t√†i li·ªáu
                </Button>
              ) : (
                <Button
                  variant="contained"
                  color="error"
                  onClick={tryingConnectScanner}
                >
                  Ch∆∞a k·∫øt n·ªëi m√°y scan
                </Button>
              )}
            </Grid>
            <Grid item xs={12} md={6} lg={6}>
              <FormControl>
                <FormLabel sx={{color: 'royalblue'}} id="radio-group-change-scan-type">C·∫•u h√¨nh qu√©t</FormLabel>
                <RadioGroup
                  row
                  defaultValue="handle-scanning"
                  aria-labelledby="radio-group-change-scan-type"
                  name="row-radio-buttons-group"
                >
                  <FormControlLabel
                    onChange={(e) => handleChangeScanType(true)}
                    id="auto-scanning"
                    value="auto-scanning"
                    control={<Radio size="small"/>}
                    label="Qu√©t t·ª± ƒë·ªông"
                  />
                  <FormControlLabel
                    onChange={(e) => handleChangeScanType(false)}
                    id="handle-scanning"
                    value="handle-scanning"
                    control={<Radio size="small"/>}
                    label="Qu√©t th·ªß c√¥ng"
                  />
                </RadioGroup>
              </FormControl>
              <div>
                <div style={{ color: 'royalblue', margin: '10px 0' }}>
                  C·∫•u h√¨nh qu√©t t·ª± ƒë·ªông
                </div>
                <div
                  style={{
                    border: '1px solid rgba(128, 128, 128, 0.4)',
                    borderRadius: '6px',
                    padding: '15px 12px',
                    backgroundColor: handleScanType ? 'white' : 'rgba(128, 128, 128, 0.1)'
                  }}
                >
                  <div>
                    <TextField
                      size="small"
                      id="after-scan-delay"
                      fullWidth
                      label="Th·ªùi gian ch·ªù sau qu√©t (s)"
                      variant="outlined"
                      disabled={handleScanType ? false : true}
                    />
                  </div>
                  <div>
                    <div className="flex flex-col gap-4" id="radio">
                      <FormControl>
                        <RadioGroup
                          row
                          aria-labelledby="demo-row-radio-buttons-group-label"
                          name="row-radio-buttons-group"
                        >
                          <FormControlLabel
                            id="auto-scanning"
                            value="female"
                            control={<Radio size="small" disabled={!handleScanType} id="one-pages-scan" />}
                            label="Qu√©t m·ªôt m·∫∑t"
                          />
                          <FormControlLabel
                            id="handle-scanning"
                            value="male"
                            control={<Radio size="small" disabled={!handleScanType} id="one-multiple-scan" />}
                            label="Qu√©t hai m·∫∑t"
                          />
                        </RadioGroup>
                      </FormControl>
                    </div>
                  </div>
                </div>
              </div>
            </Grid>
          </Grid>
        </Grid>
      </Grid>
    </Main>
  );
}
